swagger: "2.0"

info:
  title: Blog API
  version: 1.0

schemes: ["http", "https"]

paths:
  # Signup
  /api/signup:
    post:
      summary: Sign up
      description: Registeration for new users
      consumes:
        - multipart/form-part
      parameters:
        - name: username
          in: formData
          required: true
        - name: email
          in: formData
          required: true
        - name: image
          in: formData
          required: true
          type: file
        - name: password
          in: formData
          required: true
        - name: confirmationpassword
          in: formData
          required: true
      responses:
        200:
          description: Successful operation
        400:
          description: Bad request
        401:
          description: Restaurant doesn't exist

  # Login
  /api/login:
    post:
      summary: Login
      description: Login user
      parameters:
        - name: email
          in: formData
          required: true
        - name: body
          in: body
          schema:
            $ref: "#/components/schemas/User"
      responses:
        200:
          description: Successful operation
        400:
          description: Bad request
        401:
          description: Restaurant doesn't exist

    # Create a new post
  /api/posts:
    post:
      summary: Create a post
      security:
        - bearerAuth: []
      parameters:
        - name: header
          in: header
          required: true
        - name: password
          in: formData
          required: true
      responses:
        200:
          description: Successful operation
        400:
          description: Bad request
        401:
          description: Restaurant doesn't exist

components:
  schemas:
    Post:
      type: object
      example:
        {
          "title": "post title",
          "content": "Sint quaerat beatae voluptas repellat veniam sint.",
          "userUuid": "8f82f0e2-b57a-4e04-878c-deeb5edd9b61",
        }
      properties:
        title:
          type: string
        content:
          type: string
        userUuid:
          type: string
